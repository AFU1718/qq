// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zz.ady.idl

sealed abstract class Bool(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = Bool
  def isFalse: _root_.scala.Boolean = false
  def isTrue: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[Bool] = com.zz.ady.idl.Bool
  final def asRecognized: _root_.scala.Option[com.zz.ady.idl.Bool.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.zz.ady.idl.Bool.Recognized])
}

object Bool extends _root_.scalapb.GeneratedEnumCompanion[Bool] {
  sealed trait Recognized extends Bool
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Bool] = this
  @SerialVersionUID(0L)
  case object False extends Bool(0) with Bool.Recognized {
    val index = 0
    val name = "False"
    override def isFalse: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object True extends Bool(1) with Bool.Recognized {
    val index = 1
    val name = "True"
    override def isTrue: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Bool(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.immutable.Seq(False, True)
  def fromValue(__value: _root_.scala.Int): Bool = __value match {
    case 0 => False
    case 1 => True
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = EnumsProto.javaDescriptor.getEnumTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = EnumsProto.scalaDescriptor.enums(5)
}