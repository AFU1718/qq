// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zz.ady.idl

sealed abstract class IdType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = IdType
  def isUnknownIdType: _root_.scala.Boolean = false
  def isZid: _root_.scala.Boolean = false
  def isImei: _root_.scala.Boolean = false
  def isImeiMd5: _root_.scala.Boolean = false
  def isImeiSha1: _root_.scala.Boolean = false
  def isImsi: _root_.scala.Boolean = false
  def isImsiMd5: _root_.scala.Boolean = false
  def isImsiSha1: _root_.scala.Boolean = false
  def isAndroidId: _root_.scala.Boolean = false
  def isAndroidIdMd5: _root_.scala.Boolean = false
  def isAndroidIdSha1: _root_.scala.Boolean = false
  def isMac: _root_.scala.Boolean = false
  def isMacMd5: _root_.scala.Boolean = false
  def isMacSha1: _root_.scala.Boolean = false
  def isSn: _root_.scala.Boolean = false
  def isIdfa: _root_.scala.Boolean = false
  def isIdfv: _root_.scala.Boolean = false
  def isMid: _root_.scala.Boolean = false
  def isOaid: _root_.scala.Boolean = false
  def isOaidMd5: _root_.scala.Boolean = false
  def isOaidSha1: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[IdType] = com.zz.ady.idl.IdType
  final def asRecognized: _root_.scala.Option[com.zz.ady.idl.IdType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.zz.ady.idl.IdType.Recognized])
}

object IdType extends _root_.scalapb.GeneratedEnumCompanion[IdType] {
  sealed trait Recognized extends IdType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[IdType] = this
  @SerialVersionUID(0L)
  case object UNKNOWN_ID_TYPE extends IdType(0) with IdType.Recognized {
    val index = 0
    val name = "UNKNOWN_ID_TYPE"
    override def isUnknownIdType: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ZID extends IdType(1) with IdType.Recognized {
    val index = 1
    val name = "ZID"
    override def isZid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IMEI extends IdType(2) with IdType.Recognized {
    val index = 2
    val name = "IMEI"
    override def isImei: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IMEI_MD5 extends IdType(3) with IdType.Recognized {
    val index = 3
    val name = "IMEI_MD5"
    override def isImeiMd5: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IMEI_SHA1 extends IdType(4) with IdType.Recognized {
    val index = 4
    val name = "IMEI_SHA1"
    override def isImeiSha1: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IMSI extends IdType(5) with IdType.Recognized {
    val index = 5
    val name = "IMSI"
    override def isImsi: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IMSI_MD5 extends IdType(6) with IdType.Recognized {
    val index = 6
    val name = "IMSI_MD5"
    override def isImsiMd5: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IMSI_SHA1 extends IdType(7) with IdType.Recognized {
    val index = 7
    val name = "IMSI_SHA1"
    override def isImsiSha1: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ANDROID_ID extends IdType(8) with IdType.Recognized {
    val index = 8
    val name = "ANDROID_ID"
    override def isAndroidId: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ANDROID_ID_MD5 extends IdType(9) with IdType.Recognized {
    val index = 9
    val name = "ANDROID_ID_MD5"
    override def isAndroidIdMd5: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ANDROID_ID_SHA1 extends IdType(10) with IdType.Recognized {
    val index = 10
    val name = "ANDROID_ID_SHA1"
    override def isAndroidIdSha1: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MAC extends IdType(11) with IdType.Recognized {
    val index = 11
    val name = "MAC"
    override def isMac: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MAC_MD5 extends IdType(12) with IdType.Recognized {
    val index = 12
    val name = "MAC_MD5"
    override def isMacMd5: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MAC_SHA1 extends IdType(13) with IdType.Recognized {
    val index = 13
    val name = "MAC_SHA1"
    override def isMacSha1: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SN extends IdType(14) with IdType.Recognized {
    val index = 14
    val name = "SN"
    override def isSn: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IDFA extends IdType(15) with IdType.Recognized {
    val index = 15
    val name = "IDFA"
    override def isIdfa: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IDFV extends IdType(16) with IdType.Recognized {
    val index = 16
    val name = "IDFV"
    override def isIdfv: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MID extends IdType(17) with IdType.Recognized {
    val index = 17
    val name = "MID"
    override def isMid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OAID extends IdType(18) with IdType.Recognized {
    val index = 18
    val name = "OAID"
    override def isOaid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OAID_MD5 extends IdType(19) with IdType.Recognized {
    val index = 19
    val name = "OAID_MD5"
    override def isOaidMd5: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OAID_SHA1 extends IdType(20) with IdType.Recognized {
    val index = 20
    val name = "OAID_SHA1"
    override def isOaidSha1: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends IdType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.immutable.Seq(UNKNOWN_ID_TYPE, ZID, IMEI, IMEI_MD5, IMEI_SHA1, IMSI, IMSI_MD5, IMSI_SHA1, ANDROID_ID, ANDROID_ID_MD5, ANDROID_ID_SHA1, MAC, MAC_MD5, MAC_SHA1, SN, IDFA, IDFV, MID, OAID, OAID_MD5, OAID_SHA1)
  def fromValue(__value: _root_.scala.Int): IdType = __value match {
    case 0 => UNKNOWN_ID_TYPE
    case 1 => ZID
    case 2 => IMEI
    case 3 => IMEI_MD5
    case 4 => IMEI_SHA1
    case 5 => IMSI
    case 6 => IMSI_MD5
    case 7 => IMSI_SHA1
    case 8 => ANDROID_ID
    case 9 => ANDROID_ID_MD5
    case 10 => ANDROID_ID_SHA1
    case 11 => MAC
    case 12 => MAC_MD5
    case 13 => MAC_SHA1
    case 14 => SN
    case 15 => IDFA
    case 16 => IDFV
    case 17 => MID
    case 18 => OAID
    case 19 => OAID_MD5
    case 20 => OAID_SHA1
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = IdTypeProto.javaDescriptor.getEnumTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = IdTypeProto.scalaDescriptor.enums(0)
}