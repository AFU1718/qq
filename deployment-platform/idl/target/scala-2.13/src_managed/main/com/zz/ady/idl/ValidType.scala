// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zz.ady.idl

/** 消息有效性
  */
sealed abstract class ValidType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = ValidType
  def isZero: _root_.scala.Boolean = false
  def isPrecessed: _root_.scala.Boolean = false
  def isDuplicated: _root_.scala.Boolean = false
  def isExpired: _root_.scala.Boolean = false
  def isImpressionExpired: _root_.scala.Boolean = false
  def isNoImpression: _root_.scala.Boolean = false
  def isImeiBanned: _root_.scala.Boolean = false
  def isIpBanned: _root_.scala.Boolean = false
  def isUaBanned: _root_.scala.Boolean = false
  def isImsiBanned: _root_.scala.Boolean = false
  def isUnknownError: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[ValidType] = com.zz.ady.idl.ValidType
  final def asRecognized: _root_.scala.Option[com.zz.ady.idl.ValidType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.zz.ady.idl.ValidType.Recognized])
}

object ValidType extends _root_.scalapb.GeneratedEnumCompanion[ValidType] {
  sealed trait Recognized extends ValidType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ValidType] = this
  /** 正常
    */
  @SerialVersionUID(0L)
  case object ZERO extends ValidType(0) with ValidType.Recognized {
    val index = 0
    val name = "ZERO"
    override def isZero: _root_.scala.Boolean = true
  }
  
  /** 已处理
    */
  @SerialVersionUID(0L)
  case object PRECESSED extends ValidType(1) with ValidType.Recognized {
    val index = 1
    val name = "PRECESSED"
    override def isPrecessed: _root_.scala.Boolean = true
  }
  
  /** 重复请求/上报
    */
  @SerialVersionUID(0L)
  case object DUPLICATED extends ValidType(3) with ValidType.Recognized {
    val index = 2
    val name = "DUPLICATED"
    override def isDuplicated: _root_.scala.Boolean = true
  }
  
  /** 过期
    */
  @SerialVersionUID(0L)
  case object EXPIRED extends ValidType(5) with ValidType.Recognized {
    val index = 3
    val name = "EXPIRED"
    override def isExpired: _root_.scala.Boolean = true
  }
  
  /** 因为展示过期而判定失效
    */
  @SerialVersionUID(0L)
  case object IMPRESSION_EXPIRED extends ValidType(7) with ValidType.Recognized {
    val index = 4
    val name = "IMPRESSION_EXPIRED"
    override def isImpressionExpired: _root_.scala.Boolean = true
  }
  
  /** 没有展示
    */
  @SerialVersionUID(0L)
  case object NO_IMPRESSION extends ValidType(9) with ValidType.Recognized {
    val index = 5
    val name = "NO_IMPRESSION"
    override def isNoImpression: _root_.scala.Boolean = true
  }
  
  /** IMEI 被禁
    */
  @SerialVersionUID(0L)
  case object IMEI_BANNED extends ValidType(11) with ValidType.Recognized {
    val index = 6
    val name = "IMEI_BANNED"
    override def isImeiBanned: _root_.scala.Boolean = true
  }
  
  /** IP 被禁
    */
  @SerialVersionUID(0L)
  case object IP_BANNED extends ValidType(13) with ValidType.Recognized {
    val index = 7
    val name = "IP_BANNED"
    override def isIpBanned: _root_.scala.Boolean = true
  }
  
  /** UA 被禁
    */
  @SerialVersionUID(0L)
  case object UA_BANNED extends ValidType(15) with ValidType.Recognized {
    val index = 8
    val name = "UA_BANNED"
    override def isUaBanned: _root_.scala.Boolean = true
  }
  
  /** IMSI 被禁
    */
  @SerialVersionUID(0L)
  case object IMSI_BANNED extends ValidType(17) with ValidType.Recognized {
    val index = 9
    val name = "IMSI_BANNED"
    override def isImsiBanned: _root_.scala.Boolean = true
  }
  
  /** 其他异常
    */
  @SerialVersionUID(0L)
  case object UNKNOWN_ERROR extends ValidType(99) with ValidType.Recognized {
    val index = 10
    val name = "UNKNOWN_ERROR"
    override def isUnknownError: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ValidType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.immutable.Seq(ZERO, PRECESSED, DUPLICATED, EXPIRED, IMPRESSION_EXPIRED, NO_IMPRESSION, IMEI_BANNED, IP_BANNED, UA_BANNED, IMSI_BANNED, UNKNOWN_ERROR)
  def fromValue(__value: _root_.scala.Int): ValidType = __value match {
    case 0 => ZERO
    case 1 => PRECESSED
    case 3 => DUPLICATED
    case 5 => EXPIRED
    case 7 => IMPRESSION_EXPIRED
    case 9 => NO_IMPRESSION
    case 11 => IMEI_BANNED
    case 13 => IP_BANNED
    case 15 => UA_BANNED
    case 17 => IMSI_BANNED
    case 99 => UNKNOWN_ERROR
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = ValidTypeProto.javaDescriptor.getEnumTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = ValidTypeProto.scalaDescriptor.enums(0)
}