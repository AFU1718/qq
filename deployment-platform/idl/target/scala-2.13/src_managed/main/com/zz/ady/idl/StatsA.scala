// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zz.ady.idl

/** @param ts
  *   事件时间
  * @param updatedAt
  *   更新时间
  * @param placementType
  *   广告位类型
  * @param validType
  *   事件有效性
  * @param sellerCode
  *   卖方类型, 渠道
  * @param sellerTradingType
  *   与卖方之间的交易类型
  * @param buyerTradingType
  *   与买方之间的交易类型
  * @param sellerDealType
  *   与卖方之间的结算类型
  * @param buyerDealType
  *   与买方之间的结算类型
  * @param osType
  *   设备操作系统类型
  * @param dropType
  *   ADX 丢弃类型
  * @param interceptionType
  *   ADX 拦截类型
  * @param dspId
  *   dsp id
  * @param dspAppId
  *   dsp app id
  * @param dspAppPlacementId
  *   dsp app placement id
  * @param pubId
  *   pub id
  * @param pubAppId
  *   pub app id
  * @param pubAppPlacementId
  *   pub app placement id
  * @param adxCostInMicro
  *   ADX 成本, 微元
  * @param adxRevenueInMicro
  *   ADX 收益, 微元
  * @param events
  *   事件条数
  * @param sellerRequest
  *   流量端请求
  * @param adxIntercept
  *   ADX 对流量断请求的拦截
  * @param toBuyerRequest
  *   adx 对 dsp 竞价请求
  * @param buyerBid
  *   买家对 adx 出价
  * @param buyerNoBid
  *   买家对 adx 明确不出价, eg: 204
  * @param buyerTimeout
  *   买家响应超时
  * @param buyerError
  *   买家有响应，但是有错误
  * @param adxBid
  *   adx 对卖家
  * @param adxNoBid
  *   adx 对卖家不出价
  * @param adxDrop
  *   adx 丢弃买家的出价
  * @param winNotice
  *   adx 收到的竞价成功反馈
  * @param impression
  *   展示
  * @param click
  *   点击
  * @param downloadStarted
  *   下载开始
  * @param downloadCompleted
  *   下载完成
  * @param installStarted
  *   安装开始
  * @param installCompleted
  *   安装完成
  * @param videoStart
  *   开始播放
  * @param videoEnd
  *   播放完成
  * @param videoClick
  *   点击视频
  * @param videoClose
  *   关闭视频
  * @param videoSkip
  *   跳过视频
  */
@SerialVersionUID(0L)
final case class StatsA(
    ts: java.time.Instant = com.zz.ady.idl.StatsA._typemapper_ts.toCustom(0L),
    updatedAt: java.time.Instant = com.zz.ady.idl.StatsA._typemapper_updatedAt.toCustom(0L),
    placementType: com.zz.ady.idl.PlacementType = com.zz.ady.idl.PlacementType.UNKNOWN_PLACEMENT_TYPE,
    validType: com.zz.ady.idl.ValidType = com.zz.ady.idl.ValidType.ZERO,
    sellerCode: com.zz.ady.idl.SellerCode = com.zz.ady.idl.SellerCode.DefaultSeller,
    sellerTradingType: com.zz.ady.idl.TradingType = com.zz.ady.idl.TradingType.UNKNOWN_TRADING_TYPE,
    buyerTradingType: com.zz.ady.idl.TradingType = com.zz.ady.idl.TradingType.UNKNOWN_TRADING_TYPE,
    sellerDealType: com.zz.ady.idl.DealType = com.zz.ady.idl.DealType.NONE_DEAL_TYPE,
    buyerDealType: com.zz.ady.idl.DealType = com.zz.ady.idl.DealType.NONE_DEAL_TYPE,
    osType: com.zz.ady.idl.OSType = com.zz.ady.idl.OSType.UNKNOWN_OS,
    dropType: com.zz.ady.idl.DropType = com.zz.ady.idl.DropType.UNKNOWN_DROP_TYPE,
    interceptionType: com.zz.ady.idl.InterceptionType = com.zz.ady.idl.InterceptionType.UNKNOWN_ADX_INTERCEPTION_TYPE,
    dspId: _root_.scala.Int = 0,
    dspAppId: _root_.scala.Int = 0,
    dspAppPlacementId: _root_.scala.Int = 0,
    pubId: _root_.scala.Int = 0,
    pubAppId: _root_.scala.Int = 0,
    pubAppPlacementId: _root_.scala.Int = 0,
    adxCostInMicro: _root_.scala.Long = 0L,
    adxRevenueInMicro: _root_.scala.Long = 0L,
    events: _root_.scala.Long = 0L,
    sellerRequest: _root_.scala.Long = 0L,
    adxIntercept: _root_.scala.Long = 0L,
    toBuyerRequest: _root_.scala.Long = 0L,
    buyerBid: _root_.scala.Long = 0L,
    buyerNoBid: _root_.scala.Long = 0L,
    buyerTimeout: _root_.scala.Long = 0L,
    buyerError: _root_.scala.Long = 0L,
    adxBid: _root_.scala.Long = 0L,
    adxNoBid: _root_.scala.Long = 0L,
    adxDrop: _root_.scala.Long = 0L,
    winNotice: _root_.scala.Long = 0L,
    impression: _root_.scala.Long = 0L,
    click: _root_.scala.Long = 0L,
    downloadStarted: _root_.scala.Long = 0L,
    downloadCompleted: _root_.scala.Long = 0L,
    installStarted: _root_.scala.Long = 0L,
    installCompleted: _root_.scala.Long = 0L,
    videoStart: _root_.scala.Long = 0L,
    videoEnd: _root_.scala.Long = 0L,
    videoClick: _root_.scala.Long = 0L,
    videoClose: _root_.scala.Long = 0L,
    videoSkip: _root_.scala.Long = 0L
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[StatsA] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = com.zz.ady.idl.StatsA._typemapper_ts.toBase(ts)
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1001, __value)
        }
      };
      
      {
        val __value = com.zz.ady.idl.StatsA._typemapper_updatedAt.toBase(updatedAt)
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1003, __value)
        }
      };
      
      {
        val __value = placementType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2010, __value)
        }
      };
      
      {
        val __value = validType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2020, __value)
        }
      };
      
      {
        val __value = sellerCode.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2030, __value)
        }
      };
      
      {
        val __value = sellerTradingType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2040, __value)
        }
      };
      
      {
        val __value = buyerTradingType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2050, __value)
        }
      };
      
      {
        val __value = sellerDealType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2060, __value)
        }
      };
      
      {
        val __value = buyerDealType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2070, __value)
        }
      };
      
      {
        val __value = osType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2080, __value)
        }
      };
      
      {
        val __value = dropType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2090, __value)
        }
      };
      
      {
        val __value = interceptionType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2100, __value)
        }
      };
      
      {
        val __value = dspId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3010, __value)
        }
      };
      
      {
        val __value = dspAppId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3020, __value)
        }
      };
      
      {
        val __value = dspAppPlacementId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3040, __value)
        }
      };
      
      {
        val __value = pubId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3050, __value)
        }
      };
      
      {
        val __value = pubAppId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3060, __value)
        }
      };
      
      {
        val __value = pubAppPlacementId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3070, __value)
        }
      };
      
      {
        val __value = adxCostInMicro
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4010, __value)
        }
      };
      
      {
        val __value = adxRevenueInMicro
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4020, __value)
        }
      };
      
      {
        val __value = events
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7000, __value)
        }
      };
      
      {
        val __value = sellerRequest
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7010, __value)
        }
      };
      
      {
        val __value = adxIntercept
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7020, __value)
        }
      };
      
      {
        val __value = toBuyerRequest
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7030, __value)
        }
      };
      
      {
        val __value = buyerBid
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7040, __value)
        }
      };
      
      {
        val __value = buyerNoBid
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7050, __value)
        }
      };
      
      {
        val __value = buyerTimeout
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7060, __value)
        }
      };
      
      {
        val __value = buyerError
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7070, __value)
        }
      };
      
      {
        val __value = adxBid
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7080, __value)
        }
      };
      
      {
        val __value = adxNoBid
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7090, __value)
        }
      };
      
      {
        val __value = adxDrop
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7100, __value)
        }
      };
      
      {
        val __value = winNotice
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7110, __value)
        }
      };
      
      {
        val __value = impression
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7120, __value)
        }
      };
      
      {
        val __value = click
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7130, __value)
        }
      };
      
      {
        val __value = downloadStarted
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7140, __value)
        }
      };
      
      {
        val __value = downloadCompleted
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7150, __value)
        }
      };
      
      {
        val __value = installStarted
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7160, __value)
        }
      };
      
      {
        val __value = installCompleted
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7170, __value)
        }
      };
      
      {
        val __value = videoStart
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7181, __value)
        }
      };
      
      {
        val __value = videoEnd
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7183, __value)
        }
      };
      
      {
        val __value = videoClick
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7185, __value)
        }
      };
      
      {
        val __value = videoClose
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7187, __value)
        }
      };
      
      {
        val __value = videoSkip
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7189, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = com.zz.ady.idl.StatsA._typemapper_ts.toBase(ts)
        if (__v != 0L) {
          _output__.writeInt64(1001, __v)
        }
      };
      {
        val __v = com.zz.ady.idl.StatsA._typemapper_updatedAt.toBase(updatedAt)
        if (__v != 0L) {
          _output__.writeInt64(1003, __v)
        }
      };
      {
        val __v = placementType.value
        if (__v != 0) {
          _output__.writeEnum(2010, __v)
        }
      };
      {
        val __v = validType.value
        if (__v != 0) {
          _output__.writeEnum(2020, __v)
        }
      };
      {
        val __v = sellerCode.value
        if (__v != 0) {
          _output__.writeEnum(2030, __v)
        }
      };
      {
        val __v = sellerTradingType.value
        if (__v != 0) {
          _output__.writeEnum(2040, __v)
        }
      };
      {
        val __v = buyerTradingType.value
        if (__v != 0) {
          _output__.writeEnum(2050, __v)
        }
      };
      {
        val __v = sellerDealType.value
        if (__v != 0) {
          _output__.writeEnum(2060, __v)
        }
      };
      {
        val __v = buyerDealType.value
        if (__v != 0) {
          _output__.writeEnum(2070, __v)
        }
      };
      {
        val __v = osType.value
        if (__v != 0) {
          _output__.writeEnum(2080, __v)
        }
      };
      {
        val __v = dropType.value
        if (__v != 0) {
          _output__.writeEnum(2090, __v)
        }
      };
      {
        val __v = interceptionType.value
        if (__v != 0) {
          _output__.writeEnum(2100, __v)
        }
      };
      {
        val __v = dspId
        if (__v != 0) {
          _output__.writeInt32(3010, __v)
        }
      };
      {
        val __v = dspAppId
        if (__v != 0) {
          _output__.writeInt32(3020, __v)
        }
      };
      {
        val __v = dspAppPlacementId
        if (__v != 0) {
          _output__.writeInt32(3040, __v)
        }
      };
      {
        val __v = pubId
        if (__v != 0) {
          _output__.writeInt32(3050, __v)
        }
      };
      {
        val __v = pubAppId
        if (__v != 0) {
          _output__.writeInt32(3060, __v)
        }
      };
      {
        val __v = pubAppPlacementId
        if (__v != 0) {
          _output__.writeInt32(3070, __v)
        }
      };
      {
        val __v = adxCostInMicro
        if (__v != 0L) {
          _output__.writeInt64(4010, __v)
        }
      };
      {
        val __v = adxRevenueInMicro
        if (__v != 0L) {
          _output__.writeInt64(4020, __v)
        }
      };
      {
        val __v = events
        if (__v != 0L) {
          _output__.writeInt64(7000, __v)
        }
      };
      {
        val __v = sellerRequest
        if (__v != 0L) {
          _output__.writeInt64(7010, __v)
        }
      };
      {
        val __v = adxIntercept
        if (__v != 0L) {
          _output__.writeInt64(7020, __v)
        }
      };
      {
        val __v = toBuyerRequest
        if (__v != 0L) {
          _output__.writeInt64(7030, __v)
        }
      };
      {
        val __v = buyerBid
        if (__v != 0L) {
          _output__.writeInt64(7040, __v)
        }
      };
      {
        val __v = buyerNoBid
        if (__v != 0L) {
          _output__.writeInt64(7050, __v)
        }
      };
      {
        val __v = buyerTimeout
        if (__v != 0L) {
          _output__.writeInt64(7060, __v)
        }
      };
      {
        val __v = buyerError
        if (__v != 0L) {
          _output__.writeInt64(7070, __v)
        }
      };
      {
        val __v = adxBid
        if (__v != 0L) {
          _output__.writeInt64(7080, __v)
        }
      };
      {
        val __v = adxNoBid
        if (__v != 0L) {
          _output__.writeInt64(7090, __v)
        }
      };
      {
        val __v = adxDrop
        if (__v != 0L) {
          _output__.writeInt64(7100, __v)
        }
      };
      {
        val __v = winNotice
        if (__v != 0L) {
          _output__.writeInt64(7110, __v)
        }
      };
      {
        val __v = impression
        if (__v != 0L) {
          _output__.writeInt64(7120, __v)
        }
      };
      {
        val __v = click
        if (__v != 0L) {
          _output__.writeInt64(7130, __v)
        }
      };
      {
        val __v = downloadStarted
        if (__v != 0L) {
          _output__.writeInt64(7140, __v)
        }
      };
      {
        val __v = downloadCompleted
        if (__v != 0L) {
          _output__.writeInt64(7150, __v)
        }
      };
      {
        val __v = installStarted
        if (__v != 0L) {
          _output__.writeInt64(7160, __v)
        }
      };
      {
        val __v = installCompleted
        if (__v != 0L) {
          _output__.writeInt64(7170, __v)
        }
      };
      {
        val __v = videoStart
        if (__v != 0L) {
          _output__.writeInt64(7181, __v)
        }
      };
      {
        val __v = videoEnd
        if (__v != 0L) {
          _output__.writeInt64(7183, __v)
        }
      };
      {
        val __v = videoClick
        if (__v != 0L) {
          _output__.writeInt64(7185, __v)
        }
      };
      {
        val __v = videoClose
        if (__v != 0L) {
          _output__.writeInt64(7187, __v)
        }
      };
      {
        val __v = videoSkip
        if (__v != 0L) {
          _output__.writeInt64(7189, __v)
        }
      };
    }
    def withTs(__v: java.time.Instant): StatsA = copy(ts = __v)
    def withUpdatedAt(__v: java.time.Instant): StatsA = copy(updatedAt = __v)
    def withPlacementType(__v: com.zz.ady.idl.PlacementType): StatsA = copy(placementType = __v)
    def withValidType(__v: com.zz.ady.idl.ValidType): StatsA = copy(validType = __v)
    def withSellerCode(__v: com.zz.ady.idl.SellerCode): StatsA = copy(sellerCode = __v)
    def withSellerTradingType(__v: com.zz.ady.idl.TradingType): StatsA = copy(sellerTradingType = __v)
    def withBuyerTradingType(__v: com.zz.ady.idl.TradingType): StatsA = copy(buyerTradingType = __v)
    def withSellerDealType(__v: com.zz.ady.idl.DealType): StatsA = copy(sellerDealType = __v)
    def withBuyerDealType(__v: com.zz.ady.idl.DealType): StatsA = copy(buyerDealType = __v)
    def withOsType(__v: com.zz.ady.idl.OSType): StatsA = copy(osType = __v)
    def withDropType(__v: com.zz.ady.idl.DropType): StatsA = copy(dropType = __v)
    def withInterceptionType(__v: com.zz.ady.idl.InterceptionType): StatsA = copy(interceptionType = __v)
    def withDspId(__v: _root_.scala.Int): StatsA = copy(dspId = __v)
    def withDspAppId(__v: _root_.scala.Int): StatsA = copy(dspAppId = __v)
    def withDspAppPlacementId(__v: _root_.scala.Int): StatsA = copy(dspAppPlacementId = __v)
    def withPubId(__v: _root_.scala.Int): StatsA = copy(pubId = __v)
    def withPubAppId(__v: _root_.scala.Int): StatsA = copy(pubAppId = __v)
    def withPubAppPlacementId(__v: _root_.scala.Int): StatsA = copy(pubAppPlacementId = __v)
    def withAdxCostInMicro(__v: _root_.scala.Long): StatsA = copy(adxCostInMicro = __v)
    def withAdxRevenueInMicro(__v: _root_.scala.Long): StatsA = copy(adxRevenueInMicro = __v)
    def withEvents(__v: _root_.scala.Long): StatsA = copy(events = __v)
    def withSellerRequest(__v: _root_.scala.Long): StatsA = copy(sellerRequest = __v)
    def withAdxIntercept(__v: _root_.scala.Long): StatsA = copy(adxIntercept = __v)
    def withToBuyerRequest(__v: _root_.scala.Long): StatsA = copy(toBuyerRequest = __v)
    def withBuyerBid(__v: _root_.scala.Long): StatsA = copy(buyerBid = __v)
    def withBuyerNoBid(__v: _root_.scala.Long): StatsA = copy(buyerNoBid = __v)
    def withBuyerTimeout(__v: _root_.scala.Long): StatsA = copy(buyerTimeout = __v)
    def withBuyerError(__v: _root_.scala.Long): StatsA = copy(buyerError = __v)
    def withAdxBid(__v: _root_.scala.Long): StatsA = copy(adxBid = __v)
    def withAdxNoBid(__v: _root_.scala.Long): StatsA = copy(adxNoBid = __v)
    def withAdxDrop(__v: _root_.scala.Long): StatsA = copy(adxDrop = __v)
    def withWinNotice(__v: _root_.scala.Long): StatsA = copy(winNotice = __v)
    def withImpression(__v: _root_.scala.Long): StatsA = copy(impression = __v)
    def withClick(__v: _root_.scala.Long): StatsA = copy(click = __v)
    def withDownloadStarted(__v: _root_.scala.Long): StatsA = copy(downloadStarted = __v)
    def withDownloadCompleted(__v: _root_.scala.Long): StatsA = copy(downloadCompleted = __v)
    def withInstallStarted(__v: _root_.scala.Long): StatsA = copy(installStarted = __v)
    def withInstallCompleted(__v: _root_.scala.Long): StatsA = copy(installCompleted = __v)
    def withVideoStart(__v: _root_.scala.Long): StatsA = copy(videoStart = __v)
    def withVideoEnd(__v: _root_.scala.Long): StatsA = copy(videoEnd = __v)
    def withVideoClick(__v: _root_.scala.Long): StatsA = copy(videoClick = __v)
    def withVideoClose(__v: _root_.scala.Long): StatsA = copy(videoClose = __v)
    def withVideoSkip(__v: _root_.scala.Long): StatsA = copy(videoSkip = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1001 => {
          val __t = com.zz.ady.idl.StatsA._typemapper_ts.toBase(ts)
          if (__t != 0L) __t else null
        }
        case 1003 => {
          val __t = com.zz.ady.idl.StatsA._typemapper_updatedAt.toBase(updatedAt)
          if (__t != 0L) __t else null
        }
        case 2010 => {
          val __t = placementType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2020 => {
          val __t = validType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2030 => {
          val __t = sellerCode.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2040 => {
          val __t = sellerTradingType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2050 => {
          val __t = buyerTradingType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2060 => {
          val __t = sellerDealType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2070 => {
          val __t = buyerDealType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2080 => {
          val __t = osType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2090 => {
          val __t = dropType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2100 => {
          val __t = interceptionType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3010 => {
          val __t = dspId
          if (__t != 0) __t else null
        }
        case 3020 => {
          val __t = dspAppId
          if (__t != 0) __t else null
        }
        case 3040 => {
          val __t = dspAppPlacementId
          if (__t != 0) __t else null
        }
        case 3050 => {
          val __t = pubId
          if (__t != 0) __t else null
        }
        case 3060 => {
          val __t = pubAppId
          if (__t != 0) __t else null
        }
        case 3070 => {
          val __t = pubAppPlacementId
          if (__t != 0) __t else null
        }
        case 4010 => {
          val __t = adxCostInMicro
          if (__t != 0L) __t else null
        }
        case 4020 => {
          val __t = adxRevenueInMicro
          if (__t != 0L) __t else null
        }
        case 7000 => {
          val __t = events
          if (__t != 0L) __t else null
        }
        case 7010 => {
          val __t = sellerRequest
          if (__t != 0L) __t else null
        }
        case 7020 => {
          val __t = adxIntercept
          if (__t != 0L) __t else null
        }
        case 7030 => {
          val __t = toBuyerRequest
          if (__t != 0L) __t else null
        }
        case 7040 => {
          val __t = buyerBid
          if (__t != 0L) __t else null
        }
        case 7050 => {
          val __t = buyerNoBid
          if (__t != 0L) __t else null
        }
        case 7060 => {
          val __t = buyerTimeout
          if (__t != 0L) __t else null
        }
        case 7070 => {
          val __t = buyerError
          if (__t != 0L) __t else null
        }
        case 7080 => {
          val __t = adxBid
          if (__t != 0L) __t else null
        }
        case 7090 => {
          val __t = adxNoBid
          if (__t != 0L) __t else null
        }
        case 7100 => {
          val __t = adxDrop
          if (__t != 0L) __t else null
        }
        case 7110 => {
          val __t = winNotice
          if (__t != 0L) __t else null
        }
        case 7120 => {
          val __t = impression
          if (__t != 0L) __t else null
        }
        case 7130 => {
          val __t = click
          if (__t != 0L) __t else null
        }
        case 7140 => {
          val __t = downloadStarted
          if (__t != 0L) __t else null
        }
        case 7150 => {
          val __t = downloadCompleted
          if (__t != 0L) __t else null
        }
        case 7160 => {
          val __t = installStarted
          if (__t != 0L) __t else null
        }
        case 7170 => {
          val __t = installCompleted
          if (__t != 0L) __t else null
        }
        case 7181 => {
          val __t = videoStart
          if (__t != 0L) __t else null
        }
        case 7183 => {
          val __t = videoEnd
          if (__t != 0L) __t else null
        }
        case 7185 => {
          val __t = videoClick
          if (__t != 0L) __t else null
        }
        case 7187 => {
          val __t = videoClose
          if (__t != 0L) __t else null
        }
        case 7189 => {
          val __t = videoSkip
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1001 => _root_.scalapb.descriptors.PLong(com.zz.ady.idl.StatsA._typemapper_ts.toBase(ts))
        case 1003 => _root_.scalapb.descriptors.PLong(com.zz.ady.idl.StatsA._typemapper_updatedAt.toBase(updatedAt))
        case 2010 => _root_.scalapb.descriptors.PEnum(placementType.scalaValueDescriptor)
        case 2020 => _root_.scalapb.descriptors.PEnum(validType.scalaValueDescriptor)
        case 2030 => _root_.scalapb.descriptors.PEnum(sellerCode.scalaValueDescriptor)
        case 2040 => _root_.scalapb.descriptors.PEnum(sellerTradingType.scalaValueDescriptor)
        case 2050 => _root_.scalapb.descriptors.PEnum(buyerTradingType.scalaValueDescriptor)
        case 2060 => _root_.scalapb.descriptors.PEnum(sellerDealType.scalaValueDescriptor)
        case 2070 => _root_.scalapb.descriptors.PEnum(buyerDealType.scalaValueDescriptor)
        case 2080 => _root_.scalapb.descriptors.PEnum(osType.scalaValueDescriptor)
        case 2090 => _root_.scalapb.descriptors.PEnum(dropType.scalaValueDescriptor)
        case 2100 => _root_.scalapb.descriptors.PEnum(interceptionType.scalaValueDescriptor)
        case 3010 => _root_.scalapb.descriptors.PInt(dspId)
        case 3020 => _root_.scalapb.descriptors.PInt(dspAppId)
        case 3040 => _root_.scalapb.descriptors.PInt(dspAppPlacementId)
        case 3050 => _root_.scalapb.descriptors.PInt(pubId)
        case 3060 => _root_.scalapb.descriptors.PInt(pubAppId)
        case 3070 => _root_.scalapb.descriptors.PInt(pubAppPlacementId)
        case 4010 => _root_.scalapb.descriptors.PLong(adxCostInMicro)
        case 4020 => _root_.scalapb.descriptors.PLong(adxRevenueInMicro)
        case 7000 => _root_.scalapb.descriptors.PLong(events)
        case 7010 => _root_.scalapb.descriptors.PLong(sellerRequest)
        case 7020 => _root_.scalapb.descriptors.PLong(adxIntercept)
        case 7030 => _root_.scalapb.descriptors.PLong(toBuyerRequest)
        case 7040 => _root_.scalapb.descriptors.PLong(buyerBid)
        case 7050 => _root_.scalapb.descriptors.PLong(buyerNoBid)
        case 7060 => _root_.scalapb.descriptors.PLong(buyerTimeout)
        case 7070 => _root_.scalapb.descriptors.PLong(buyerError)
        case 7080 => _root_.scalapb.descriptors.PLong(adxBid)
        case 7090 => _root_.scalapb.descriptors.PLong(adxNoBid)
        case 7100 => _root_.scalapb.descriptors.PLong(adxDrop)
        case 7110 => _root_.scalapb.descriptors.PLong(winNotice)
        case 7120 => _root_.scalapb.descriptors.PLong(impression)
        case 7130 => _root_.scalapb.descriptors.PLong(click)
        case 7140 => _root_.scalapb.descriptors.PLong(downloadStarted)
        case 7150 => _root_.scalapb.descriptors.PLong(downloadCompleted)
        case 7160 => _root_.scalapb.descriptors.PLong(installStarted)
        case 7170 => _root_.scalapb.descriptors.PLong(installCompleted)
        case 7181 => _root_.scalapb.descriptors.PLong(videoStart)
        case 7183 => _root_.scalapb.descriptors.PLong(videoEnd)
        case 7185 => _root_.scalapb.descriptors.PLong(videoClick)
        case 7187 => _root_.scalapb.descriptors.PLong(videoClose)
        case 7189 => _root_.scalapb.descriptors.PLong(videoSkip)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.zz.ady.idl.StatsA
}

object StatsA extends scalapb.GeneratedMessageCompanion[com.zz.ady.idl.StatsA] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zz.ady.idl.StatsA] = this
  def merge(`_message__`: com.zz.ady.idl.StatsA, `_input__`: _root_.com.google.protobuf.CodedInputStream): com.zz.ady.idl.StatsA = {
    var __ts = `_message__`.ts
    var __updatedAt = `_message__`.updatedAt
    var __placementType = `_message__`.placementType
    var __validType = `_message__`.validType
    var __sellerCode = `_message__`.sellerCode
    var __sellerTradingType = `_message__`.sellerTradingType
    var __buyerTradingType = `_message__`.buyerTradingType
    var __sellerDealType = `_message__`.sellerDealType
    var __buyerDealType = `_message__`.buyerDealType
    var __osType = `_message__`.osType
    var __dropType = `_message__`.dropType
    var __interceptionType = `_message__`.interceptionType
    var __dspId = `_message__`.dspId
    var __dspAppId = `_message__`.dspAppId
    var __dspAppPlacementId = `_message__`.dspAppPlacementId
    var __pubId = `_message__`.pubId
    var __pubAppId = `_message__`.pubAppId
    var __pubAppPlacementId = `_message__`.pubAppPlacementId
    var __adxCostInMicro = `_message__`.adxCostInMicro
    var __adxRevenueInMicro = `_message__`.adxRevenueInMicro
    var __events = `_message__`.events
    var __sellerRequest = `_message__`.sellerRequest
    var __adxIntercept = `_message__`.adxIntercept
    var __toBuyerRequest = `_message__`.toBuyerRequest
    var __buyerBid = `_message__`.buyerBid
    var __buyerNoBid = `_message__`.buyerNoBid
    var __buyerTimeout = `_message__`.buyerTimeout
    var __buyerError = `_message__`.buyerError
    var __adxBid = `_message__`.adxBid
    var __adxNoBid = `_message__`.adxNoBid
    var __adxDrop = `_message__`.adxDrop
    var __winNotice = `_message__`.winNotice
    var __impression = `_message__`.impression
    var __click = `_message__`.click
    var __downloadStarted = `_message__`.downloadStarted
    var __downloadCompleted = `_message__`.downloadCompleted
    var __installStarted = `_message__`.installStarted
    var __installCompleted = `_message__`.installCompleted
    var __videoStart = `_message__`.videoStart
    var __videoEnd = `_message__`.videoEnd
    var __videoClick = `_message__`.videoClick
    var __videoClose = `_message__`.videoClose
    var __videoSkip = `_message__`.videoSkip
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8008 =>
          __ts = com.zz.ady.idl.StatsA._typemapper_ts.toCustom(_input__.readInt64())
        case 8024 =>
          __updatedAt = com.zz.ady.idl.StatsA._typemapper_updatedAt.toCustom(_input__.readInt64())
        case 16080 =>
          __placementType = com.zz.ady.idl.PlacementType.fromValue(_input__.readEnum())
        case 16160 =>
          __validType = com.zz.ady.idl.ValidType.fromValue(_input__.readEnum())
        case 16240 =>
          __sellerCode = com.zz.ady.idl.SellerCode.fromValue(_input__.readEnum())
        case 16320 =>
          __sellerTradingType = com.zz.ady.idl.TradingType.fromValue(_input__.readEnum())
        case 16400 =>
          __buyerTradingType = com.zz.ady.idl.TradingType.fromValue(_input__.readEnum())
        case 16480 =>
          __sellerDealType = com.zz.ady.idl.DealType.fromValue(_input__.readEnum())
        case 16560 =>
          __buyerDealType = com.zz.ady.idl.DealType.fromValue(_input__.readEnum())
        case 16640 =>
          __osType = com.zz.ady.idl.OSType.fromValue(_input__.readEnum())
        case 16720 =>
          __dropType = com.zz.ady.idl.DropType.fromValue(_input__.readEnum())
        case 16800 =>
          __interceptionType = com.zz.ady.idl.InterceptionType.fromValue(_input__.readEnum())
        case 24080 =>
          __dspId = _input__.readInt32()
        case 24160 =>
          __dspAppId = _input__.readInt32()
        case 24320 =>
          __dspAppPlacementId = _input__.readInt32()
        case 24400 =>
          __pubId = _input__.readInt32()
        case 24480 =>
          __pubAppId = _input__.readInt32()
        case 24560 =>
          __pubAppPlacementId = _input__.readInt32()
        case 32080 =>
          __adxCostInMicro = _input__.readInt64()
        case 32160 =>
          __adxRevenueInMicro = _input__.readInt64()
        case 56000 =>
          __events = _input__.readInt64()
        case 56080 =>
          __sellerRequest = _input__.readInt64()
        case 56160 =>
          __adxIntercept = _input__.readInt64()
        case 56240 =>
          __toBuyerRequest = _input__.readInt64()
        case 56320 =>
          __buyerBid = _input__.readInt64()
        case 56400 =>
          __buyerNoBid = _input__.readInt64()
        case 56480 =>
          __buyerTimeout = _input__.readInt64()
        case 56560 =>
          __buyerError = _input__.readInt64()
        case 56640 =>
          __adxBid = _input__.readInt64()
        case 56720 =>
          __adxNoBid = _input__.readInt64()
        case 56800 =>
          __adxDrop = _input__.readInt64()
        case 56880 =>
          __winNotice = _input__.readInt64()
        case 56960 =>
          __impression = _input__.readInt64()
        case 57040 =>
          __click = _input__.readInt64()
        case 57120 =>
          __downloadStarted = _input__.readInt64()
        case 57200 =>
          __downloadCompleted = _input__.readInt64()
        case 57280 =>
          __installStarted = _input__.readInt64()
        case 57360 =>
          __installCompleted = _input__.readInt64()
        case 57448 =>
          __videoStart = _input__.readInt64()
        case 57464 =>
          __videoEnd = _input__.readInt64()
        case 57480 =>
          __videoClick = _input__.readInt64()
        case 57496 =>
          __videoClose = _input__.readInt64()
        case 57512 =>
          __videoSkip = _input__.readInt64()
        case tag => _input__.skipField(tag)
      }
    }
    com.zz.ady.idl.StatsA(
        ts = __ts,
        updatedAt = __updatedAt,
        placementType = __placementType,
        validType = __validType,
        sellerCode = __sellerCode,
        sellerTradingType = __sellerTradingType,
        buyerTradingType = __buyerTradingType,
        sellerDealType = __sellerDealType,
        buyerDealType = __buyerDealType,
        osType = __osType,
        dropType = __dropType,
        interceptionType = __interceptionType,
        dspId = __dspId,
        dspAppId = __dspAppId,
        dspAppPlacementId = __dspAppPlacementId,
        pubId = __pubId,
        pubAppId = __pubAppId,
        pubAppPlacementId = __pubAppPlacementId,
        adxCostInMicro = __adxCostInMicro,
        adxRevenueInMicro = __adxRevenueInMicro,
        events = __events,
        sellerRequest = __sellerRequest,
        adxIntercept = __adxIntercept,
        toBuyerRequest = __toBuyerRequest,
        buyerBid = __buyerBid,
        buyerNoBid = __buyerNoBid,
        buyerTimeout = __buyerTimeout,
        buyerError = __buyerError,
        adxBid = __adxBid,
        adxNoBid = __adxNoBid,
        adxDrop = __adxDrop,
        winNotice = __winNotice,
        impression = __impression,
        click = __click,
        downloadStarted = __downloadStarted,
        downloadCompleted = __downloadCompleted,
        installStarted = __installStarted,
        installCompleted = __installCompleted,
        videoStart = __videoStart,
        videoEnd = __videoEnd,
        videoClick = __videoClick,
        videoClose = __videoClose,
        videoSkip = __videoSkip
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zz.ady.idl.StatsA] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zz.ady.idl.StatsA(
        ts = com.zz.ady.idl.StatsA._typemapper_ts.toCustom(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1001).get).map(_.as[_root_.scala.Long]).getOrElse(0L)),
        updatedAt = com.zz.ady.idl.StatsA._typemapper_updatedAt.toCustom(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1003).get).map(_.as[_root_.scala.Long]).getOrElse(0L)),
        placementType = com.zz.ady.idl.PlacementType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2010).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.PlacementType.UNKNOWN_PLACEMENT_TYPE.scalaValueDescriptor).number),
        validType = com.zz.ady.idl.ValidType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2020).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.ValidType.ZERO.scalaValueDescriptor).number),
        sellerCode = com.zz.ady.idl.SellerCode.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2030).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.SellerCode.DefaultSeller.scalaValueDescriptor).number),
        sellerTradingType = com.zz.ady.idl.TradingType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2040).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.TradingType.UNKNOWN_TRADING_TYPE.scalaValueDescriptor).number),
        buyerTradingType = com.zz.ady.idl.TradingType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2050).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.TradingType.UNKNOWN_TRADING_TYPE.scalaValueDescriptor).number),
        sellerDealType = com.zz.ady.idl.DealType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2060).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.DealType.NONE_DEAL_TYPE.scalaValueDescriptor).number),
        buyerDealType = com.zz.ady.idl.DealType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2070).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.DealType.NONE_DEAL_TYPE.scalaValueDescriptor).number),
        osType = com.zz.ady.idl.OSType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2080).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.OSType.UNKNOWN_OS.scalaValueDescriptor).number),
        dropType = com.zz.ady.idl.DropType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2090).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.DropType.UNKNOWN_DROP_TYPE.scalaValueDescriptor).number),
        interceptionType = com.zz.ady.idl.InterceptionType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2100).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zz.ady.idl.InterceptionType.UNKNOWN_ADX_INTERCEPTION_TYPE.scalaValueDescriptor).number),
        dspId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3010).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        dspAppId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3020).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        dspAppPlacementId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3040).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        pubId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3050).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        pubAppId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3060).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        pubAppPlacementId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3070).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        adxCostInMicro = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4010).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        adxRevenueInMicro = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4020).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        events = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7000).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sellerRequest = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7010).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        adxIntercept = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7020).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        toBuyerRequest = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7030).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        buyerBid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7040).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        buyerNoBid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7050).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        buyerTimeout = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7060).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        buyerError = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7070).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        adxBid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7080).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        adxNoBid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7090).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        adxDrop = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7100).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        winNotice = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7110).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        impression = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7120).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        click = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7130).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        downloadStarted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7140).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        downloadCompleted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7150).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        installStarted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7160).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        installCompleted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7170).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        videoStart = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7181).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        videoEnd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7183).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        videoClick = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7185).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        videoClose = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7187).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        videoSkip = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7189).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = StatsProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = StatsProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2010 => com.zz.ady.idl.PlacementType
      case 2020 => com.zz.ady.idl.ValidType
      case 2030 => com.zz.ady.idl.SellerCode
      case 2040 => com.zz.ady.idl.TradingType
      case 2050 => com.zz.ady.idl.TradingType
      case 2060 => com.zz.ady.idl.DealType
      case 2070 => com.zz.ady.idl.DealType
      case 2080 => com.zz.ady.idl.OSType
      case 2090 => com.zz.ady.idl.DropType
      case 2100 => com.zz.ady.idl.InterceptionType
    }
  }
  lazy val defaultInstance = com.zz.ady.idl.StatsA(
    ts = com.zz.ady.idl.StatsA._typemapper_ts.toCustom(0L),
    updatedAt = com.zz.ady.idl.StatsA._typemapper_updatedAt.toCustom(0L),
    placementType = com.zz.ady.idl.PlacementType.UNKNOWN_PLACEMENT_TYPE,
    validType = com.zz.ady.idl.ValidType.ZERO,
    sellerCode = com.zz.ady.idl.SellerCode.DefaultSeller,
    sellerTradingType = com.zz.ady.idl.TradingType.UNKNOWN_TRADING_TYPE,
    buyerTradingType = com.zz.ady.idl.TradingType.UNKNOWN_TRADING_TYPE,
    sellerDealType = com.zz.ady.idl.DealType.NONE_DEAL_TYPE,
    buyerDealType = com.zz.ady.idl.DealType.NONE_DEAL_TYPE,
    osType = com.zz.ady.idl.OSType.UNKNOWN_OS,
    dropType = com.zz.ady.idl.DropType.UNKNOWN_DROP_TYPE,
    interceptionType = com.zz.ady.idl.InterceptionType.UNKNOWN_ADX_INTERCEPTION_TYPE,
    dspId = 0,
    dspAppId = 0,
    dspAppPlacementId = 0,
    pubId = 0,
    pubAppId = 0,
    pubAppPlacementId = 0,
    adxCostInMicro = 0L,
    adxRevenueInMicro = 0L,
    events = 0L,
    sellerRequest = 0L,
    adxIntercept = 0L,
    toBuyerRequest = 0L,
    buyerBid = 0L,
    buyerNoBid = 0L,
    buyerTimeout = 0L,
    buyerError = 0L,
    adxBid = 0L,
    adxNoBid = 0L,
    adxDrop = 0L,
    winNotice = 0L,
    impression = 0L,
    click = 0L,
    downloadStarted = 0L,
    downloadCompleted = 0L,
    installStarted = 0L,
    installCompleted = 0L,
    videoStart = 0L,
    videoEnd = 0L,
    videoClick = 0L,
    videoClose = 0L,
    videoSkip = 0L
  )
  implicit class StatsALens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.StatsA]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zz.ady.idl.StatsA](_l) {
    def ts: _root_.scalapb.lenses.Lens[UpperPB, java.time.Instant] = field(_.ts)((c_, f_) => c_.copy(ts = f_))
    def updatedAt: _root_.scalapb.lenses.Lens[UpperPB, java.time.Instant] = field(_.updatedAt)((c_, f_) => c_.copy(updatedAt = f_))
    def placementType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.PlacementType] = field(_.placementType)((c_, f_) => c_.copy(placementType = f_))
    def validType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.ValidType] = field(_.validType)((c_, f_) => c_.copy(validType = f_))
    def sellerCode: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.SellerCode] = field(_.sellerCode)((c_, f_) => c_.copy(sellerCode = f_))
    def sellerTradingType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.TradingType] = field(_.sellerTradingType)((c_, f_) => c_.copy(sellerTradingType = f_))
    def buyerTradingType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.TradingType] = field(_.buyerTradingType)((c_, f_) => c_.copy(buyerTradingType = f_))
    def sellerDealType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.DealType] = field(_.sellerDealType)((c_, f_) => c_.copy(sellerDealType = f_))
    def buyerDealType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.DealType] = field(_.buyerDealType)((c_, f_) => c_.copy(buyerDealType = f_))
    def osType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.OSType] = field(_.osType)((c_, f_) => c_.copy(osType = f_))
    def dropType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.DropType] = field(_.dropType)((c_, f_) => c_.copy(dropType = f_))
    def interceptionType: _root_.scalapb.lenses.Lens[UpperPB, com.zz.ady.idl.InterceptionType] = field(_.interceptionType)((c_, f_) => c_.copy(interceptionType = f_))
    def dspId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.dspId)((c_, f_) => c_.copy(dspId = f_))
    def dspAppId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.dspAppId)((c_, f_) => c_.copy(dspAppId = f_))
    def dspAppPlacementId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.dspAppPlacementId)((c_, f_) => c_.copy(dspAppPlacementId = f_))
    def pubId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.pubId)((c_, f_) => c_.copy(pubId = f_))
    def pubAppId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.pubAppId)((c_, f_) => c_.copy(pubAppId = f_))
    def pubAppPlacementId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.pubAppPlacementId)((c_, f_) => c_.copy(pubAppPlacementId = f_))
    def adxCostInMicro: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.adxCostInMicro)((c_, f_) => c_.copy(adxCostInMicro = f_))
    def adxRevenueInMicro: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.adxRevenueInMicro)((c_, f_) => c_.copy(adxRevenueInMicro = f_))
    def events: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.events)((c_, f_) => c_.copy(events = f_))
    def sellerRequest: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sellerRequest)((c_, f_) => c_.copy(sellerRequest = f_))
    def adxIntercept: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.adxIntercept)((c_, f_) => c_.copy(adxIntercept = f_))
    def toBuyerRequest: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.toBuyerRequest)((c_, f_) => c_.copy(toBuyerRequest = f_))
    def buyerBid: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.buyerBid)((c_, f_) => c_.copy(buyerBid = f_))
    def buyerNoBid: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.buyerNoBid)((c_, f_) => c_.copy(buyerNoBid = f_))
    def buyerTimeout: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.buyerTimeout)((c_, f_) => c_.copy(buyerTimeout = f_))
    def buyerError: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.buyerError)((c_, f_) => c_.copy(buyerError = f_))
    def adxBid: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.adxBid)((c_, f_) => c_.copy(adxBid = f_))
    def adxNoBid: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.adxNoBid)((c_, f_) => c_.copy(adxNoBid = f_))
    def adxDrop: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.adxDrop)((c_, f_) => c_.copy(adxDrop = f_))
    def winNotice: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.winNotice)((c_, f_) => c_.copy(winNotice = f_))
    def impression: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.impression)((c_, f_) => c_.copy(impression = f_))
    def click: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.click)((c_, f_) => c_.copy(click = f_))
    def downloadStarted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.downloadStarted)((c_, f_) => c_.copy(downloadStarted = f_))
    def downloadCompleted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.downloadCompleted)((c_, f_) => c_.copy(downloadCompleted = f_))
    def installStarted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.installStarted)((c_, f_) => c_.copy(installStarted = f_))
    def installCompleted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.installCompleted)((c_, f_) => c_.copy(installCompleted = f_))
    def videoStart: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.videoStart)((c_, f_) => c_.copy(videoStart = f_))
    def videoEnd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.videoEnd)((c_, f_) => c_.copy(videoEnd = f_))
    def videoClick: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.videoClick)((c_, f_) => c_.copy(videoClick = f_))
    def videoClose: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.videoClose)((c_, f_) => c_.copy(videoClose = f_))
    def videoSkip: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.videoSkip)((c_, f_) => c_.copy(videoSkip = f_))
  }
  final val TS_FIELD_NUMBER = 1001
  final val UPDATED_AT_FIELD_NUMBER = 1003
  final val PLACEMENT_TYPE_FIELD_NUMBER = 2010
  final val VALIDTYPE_FIELD_NUMBER = 2020
  final val SELLER_CODE_FIELD_NUMBER = 2030
  final val SELLER_TRADING_TYPE_FIELD_NUMBER = 2040
  final val BUYER_TRADING_TYPE_FIELD_NUMBER = 2050
  final val SELLER_DEAL_TYPE_FIELD_NUMBER = 2060
  final val BUYER_DEAL_TYPE_FIELD_NUMBER = 2070
  final val OS_TYPE_FIELD_NUMBER = 2080
  final val DROP_TYPE_FIELD_NUMBER = 2090
  final val INTERCEPTION_TYPE_FIELD_NUMBER = 2100
  final val DSP_ID_FIELD_NUMBER = 3010
  final val DSP_APP_ID_FIELD_NUMBER = 3020
  final val DSP_APP_PLACEMENT_ID_FIELD_NUMBER = 3040
  final val PUB_ID_FIELD_NUMBER = 3050
  final val PUB_APP_ID_FIELD_NUMBER = 3060
  final val PUB_APP_PLACEMENT_ID_FIELD_NUMBER = 3070
  final val ADX_COST_IN_MICRO_FIELD_NUMBER = 4010
  final val ADX_REVENUE_IN_MICRO_FIELD_NUMBER = 4020
  final val EVENTS_FIELD_NUMBER = 7000
  final val SELLER_REQUEST_FIELD_NUMBER = 7010
  final val ADX_INTERCEPT_FIELD_NUMBER = 7020
  final val TO_BUYER_REQUEST_FIELD_NUMBER = 7030
  final val BUYER_BID_FIELD_NUMBER = 7040
  final val BUYER_NO_BID_FIELD_NUMBER = 7050
  final val BUYER_TIMEOUT_FIELD_NUMBER = 7060
  final val BUYER_ERROR_FIELD_NUMBER = 7070
  final val ADX_BID_FIELD_NUMBER = 7080
  final val ADX_NO_BID_FIELD_NUMBER = 7090
  final val ADX_DROP_FIELD_NUMBER = 7100
  final val WIN_NOTICE_FIELD_NUMBER = 7110
  final val IMPRESSION_FIELD_NUMBER = 7120
  final val CLICK_FIELD_NUMBER = 7130
  final val DOWNLOAD_STARTED_FIELD_NUMBER = 7140
  final val DOWNLOAD_COMPLETED_FIELD_NUMBER = 7150
  final val INSTALL_STARTED_FIELD_NUMBER = 7160
  final val INSTALL_COMPLETED_FIELD_NUMBER = 7170
  final val VIDEO_START_FIELD_NUMBER = 7181
  final val VIDEO_END_FIELD_NUMBER = 7183
  final val VIDEO_CLICK_FIELD_NUMBER = 7185
  final val VIDEO_CLOSE_FIELD_NUMBER = 7187
  final val VIDEO_SKIP_FIELD_NUMBER = 7189
  @transient
  private val _typemapper_ts: _root_.scalapb.TypeMapper[_root_.scala.Long, java.time.Instant] = implicitly[_root_.scalapb.TypeMapper[_root_.scala.Long, java.time.Instant]]
  @transient
  private val _typemapper_updatedAt: _root_.scalapb.TypeMapper[_root_.scala.Long, java.time.Instant] = implicitly[_root_.scalapb.TypeMapper[_root_.scala.Long, java.time.Instant]]
  def of(
    ts: java.time.Instant,
    updatedAt: java.time.Instant,
    placementType: com.zz.ady.idl.PlacementType,
    validType: com.zz.ady.idl.ValidType,
    sellerCode: com.zz.ady.idl.SellerCode,
    sellerTradingType: com.zz.ady.idl.TradingType,
    buyerTradingType: com.zz.ady.idl.TradingType,
    sellerDealType: com.zz.ady.idl.DealType,
    buyerDealType: com.zz.ady.idl.DealType,
    osType: com.zz.ady.idl.OSType,
    dropType: com.zz.ady.idl.DropType,
    interceptionType: com.zz.ady.idl.InterceptionType,
    dspId: _root_.scala.Int,
    dspAppId: _root_.scala.Int,
    dspAppPlacementId: _root_.scala.Int,
    pubId: _root_.scala.Int,
    pubAppId: _root_.scala.Int,
    pubAppPlacementId: _root_.scala.Int,
    adxCostInMicro: _root_.scala.Long,
    adxRevenueInMicro: _root_.scala.Long,
    events: _root_.scala.Long,
    sellerRequest: _root_.scala.Long,
    adxIntercept: _root_.scala.Long,
    toBuyerRequest: _root_.scala.Long,
    buyerBid: _root_.scala.Long,
    buyerNoBid: _root_.scala.Long,
    buyerTimeout: _root_.scala.Long,
    buyerError: _root_.scala.Long,
    adxBid: _root_.scala.Long,
    adxNoBid: _root_.scala.Long,
    adxDrop: _root_.scala.Long,
    winNotice: _root_.scala.Long,
    impression: _root_.scala.Long,
    click: _root_.scala.Long,
    downloadStarted: _root_.scala.Long,
    downloadCompleted: _root_.scala.Long,
    installStarted: _root_.scala.Long,
    installCompleted: _root_.scala.Long,
    videoStart: _root_.scala.Long,
    videoEnd: _root_.scala.Long,
    videoClick: _root_.scala.Long,
    videoClose: _root_.scala.Long,
    videoSkip: _root_.scala.Long
  ): _root_.com.zz.ady.idl.StatsA = _root_.com.zz.ady.idl.StatsA(
    ts,
    updatedAt,
    placementType,
    validType,
    sellerCode,
    sellerTradingType,
    buyerTradingType,
    sellerDealType,
    buyerDealType,
    osType,
    dropType,
    interceptionType,
    dspId,
    dspAppId,
    dspAppPlacementId,
    pubId,
    pubAppId,
    pubAppPlacementId,
    adxCostInMicro,
    adxRevenueInMicro,
    events,
    sellerRequest,
    adxIntercept,
    toBuyerRequest,
    buyerBid,
    buyerNoBid,
    buyerTimeout,
    buyerError,
    adxBid,
    adxNoBid,
    adxDrop,
    winNotice,
    impression,
    click,
    downloadStarted,
    downloadCompleted,
    installStarted,
    installCompleted,
    videoStart,
    videoEnd,
    videoClick,
    videoClose,
    videoSkip
  )
}
