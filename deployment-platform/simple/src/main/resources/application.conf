akka {
  # 日志级别， DEBUG, INFO
  loglevel = "DEBUG"
  # do not edit this
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  actor {
    provider = cluster
    allow-java-serialization = off
    serializers {
      java = "akka.serialization.JavaSerializer"
      // kryo = "com.twitter.chill.akka.AkkaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      "scalapb.GeneratedMessage" = proto
      "scalapb.GeneratedEnum" = proto
      // "java.io.Serializable" = kryo
      // "com.chinamobiad.adx.edge.model.ActorSerializable" = kryo
    }

  }

  //  cluster {
  //    seed-nodes = [
  //      "akka://ady-cache@127.0.0.1:12400"
  //      // , "akka.tcp://adx-edge-core@127.0.0.1:14401"
  //    ]
  //  }
  //
  //  remote {
  //    artery {
  //      transport = aeron-udp # tcp # See Selecting a transport below
  //      canonical.hostname = "127.0.0.1"
  //      canonical.port = 12400
  //    }
  //  }

  remote.artery {
    canonical {
      # hostname = "127.0.0.1"
      port = 0
    }
  }
}

akka.discovery {
  simple-consul {
    name = "adx64"
    host = "192.168.0.64"
    port = 8500
    maintenance-interval = 10.seconds
  }
}

akka.system.name = "simple-app"

akka.http.server.preview.enable-http2 = on

app {
  timezone = "Asia/Shanghai"
}

# http {
#   main {
#     host = "0.0.0.0"
#     port = 3366
#   }
#   akka {
#     host = "0.0.0.0"
#     port = 3377
#   }
# }

database {
  main {
    dataSourceClass = org.postgresql.ds.PGSimpleDataSource
    properties = {
      serverName = "adx66"
      portNumber = 5432
      databaseName = "ady"
      user = "root"
      password = "aszx"
    }
    poolName = "dsp_rw"
    connectionTimeout = 500
    maximumPoolSize = 8
    numThreads = 8
  }
  ady = ${database.main}
  ro = ${database.main} // read only, not used yet
  ro.poolName = "adx_ro"
  report = ${database.main}
  report.properties.databaseName = "ady_report"
  report.properties.user = "root"
  report.poolName = "simple-report"

  file = ${database.main}
  file.properties.databaseName = "file_meta"
  ro.poolName = "file-loading"
}

auth {
  stateless {
    jwt {
      secret = "26uKTlqR8BKpjdJ35DmuN+1q5cA28ep2xKLjR9n2QhI="
      tsec {
        header-name = "X-TSec-JWT"
        expiry-duration = 30.days
        max-idle = 1.days
      }
    }
  }
}
